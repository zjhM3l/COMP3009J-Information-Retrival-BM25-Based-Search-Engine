SED navigation bar Setting Your Graphics Devices and Printing Graphics Introduction Normally, one of the first things you need to do in Dataplot session is to set the appropriate graphics devices.
Dataplot provides three graphics devices that are set by the commands DEVICE 1 
These devices work independently of each other.
That is, you can have 0, 1, 2, or all 3 devices active at the same time.
The DEVICE 1 output is generally the "terminal" graphics device.
DEVICE 2 and DEVICE 3 are generally for writing graphics output to file for later display or printing.
DEVICE 1 Output
DEVICE 1 is used to identify your terminal device.
It defaults to a Tektronix 4014 terminal.
You can use the Dataplot startup files to change the default screen device.
Unix Platforms On Unix platforms, X11 is almost always the preferred terminal device when running the command line version of Dataplot.
Enter the command DEVICE 1 X11
to activate the X11 device driver.
If you are running the graphical interface version, you should not specify the DEVICE 1 X11 command yourself.
The GUI will generate the command automatically and it appends some window id information to the command (this is so the Tcl/Tk scripts can control the graphics window).
The GUI allows you to alternatively select to have the graphics drawn by Tcl/Tk.
The primary advantage of the X11 driver is that it is more efficient.
The primary advantage of the Tcl/Tk driver is that automatic restoring of the graphics window (after menu operations have covered it up) works better.
Basically, this comes down to a personal preference.
Windows Platforms If you are running the command line version built using the Compaq (formerly Microsoft) compiler, i.e., DATAPLOT.EXE, then use the following command: DEVICE 1 QWIN
If you do not see any text in the text window when you initiate this command, then this means that your PC is probably set to "true color" mode.
Add the "-true" option when you invoke Dataplot.
For example, C:\DATAPLOT\DATAPLOT.EXE -true -large
This can be set either in the Properties menu of the shortcut or in the "DPCOMM.BAT" batch file (DPCOMM.BAT is used if Dataplot was not installed in the default C:\DATAPLOT directory).
If you are running the graphical interface version, you do not specify a DEVICE 1 command.
In the GUI, the screen graphics are generated by the Tcl/Tk scripts.
The final case is if you are running the executable created with the Lahey compiler (DPLAHEY.EXE).
This is the executable used by the GUI.
The primary reason for running this executable directly is to run Dataplot in a DOS mode.
This version does not support any screen graphics.
Instead, enter the command DISCRETE
This generates line printer type graphics to the screen.
Alternatively, you can turn off the screen graphics altogether by entering DEVICE 1 OFF
Other Platforms For non-Unix, non-Windows platforms, the available alternatives are:
DEVICE 1 REGIS Use this if you are using some type of DEC VT terminal.
This might be the case if you are running Dataplot on a Vax/VMS system.
DEVICE 1 HP 2622 DEVICE 1 HP 2647 Use this if you are using an HP 2622 or HP 2647 terminal.
Note that other HP terminals may be compatible with these.
DEVICE 1 TEKTRONIX 4014 Use this if you are using a Tektronix 4014 terminal.
Several other Tektronix models are supported as well.
DISCRETE Use this if your screen does not support graphics or the type of graphics is not one of the available choices in Dataplot.
Note that although Tektronix, Regis, and HP terminals are increasingly rare, they still have some use as "emmulator" devices.
That is, communications software often provides for some type of device emulation for graphics.
The Tektronix, Regis, and HP terminals are the most commonly emulated devices.
If you are unable to generate screen graphics, this does not prohibit you from generating high quality graphics to DEVICE 2 and DEVICE 3.
That is, you can use the DISCRETE command to obtain crude graphics to the screen while still generating high quality Postscript output to file.
DEVICE 2 Output DEVICE 2 Off By Default DEVICE 2 is off by default.
When you initialize device 2 (e.g., DEVICE 2 POSTSCRIPT), all subsequent plots are written to the file "dppl1f.dat" in the current directory until you enter a DEVICE 2 OFF or a DEVICE 2 CLOSE command.
Note that there is a distinction between DEVICE 2 OFF and DEVICE 2 CLOSE.
DEVICE 2 OFF suspends printing of graphics to the "dppl1f.dat" file, but it does not close the file.
You can enter DEVICE 2 ON to resume printing the plots to "dppl1f.dat".
DEVICE 2 CLOSE suspends printing, but it additionally closes the file.
To resume printing, you need to re-initialize the device (e.g., DEVICE 2 POSTSCRIPT).
In summary, DEVICE 2 ON/OFF is used to toggle whether or not graphics are sent to a currently open "dppl1f.dat" file and can be entered as many times as desired.
This can be useful in an interactive session where you may want to pick and choose which graphs will be saved for later printing.
On the other hand, DEVICE 2 
DEVICE 2 CLOSE can then be used to close the "dppl1f.dat" file.
Closing the "dppl1f.dat" is necessary if you want to print the "dppl1f.dat" file without exiting Dataplot.
Entering a DEVICE 2 
For some devices, the effect is benign.
However, for other devices the subsequent output can be harmed.
In particular, Postscript output will be messed up (this is because Postscript performs certain intitialization code and entering this code a second time results in harmful consequences).
Common Choices The most useful choices for DEVICE 2 are as follows.
DEVICE 2 POSTSCRIPT
DEVICE 2 POSTSCRIPT ENCAPSULATED This generates Postscript output.
There is a distinction between regular Postscript and encapsulated Postscript.
Use regular Postscript if you simply want to print your grapphics.
Use encapsulated Postscript if you want to import your graphics into another program such as Word or Power Point.
For more discussion about importing graphics into Word/Power Point, see the FAQS entry.
DEVICE 2 HPGL
DEVICE 2 HPGL LASER HP-GL is the protocol used by HP penplotters.
If you have a Laser Jet III, or higher model, that does not support Postscript, you can use the built-in HP-GL emulation that these printers provide.
There are a few quirks in the HP-GL emulation in these printers.
Specifying DEVICE 2 HPGL LASER contains a few modifications to the basic HPGL driver to account for these quirks.
If you omit the LASER option, the HPGL file will probably not print correctly on these laser jet printers.
DEVICE 2 GD PNG
DEVICE 2 GD JPEG These drivers generate PNG (Portable Network Graphics) and JPEG files.
These drivers may not be available on all implementations of Dataplot (they should be supported on most Unix platforms, they are not available under Windows as of 8/2002).
PNG and JPEG are bit-mapped graphics formats that are primarily useful for web applications.
Most web browsers support these formats using the HTML IMG tag.
They can also be useful for importing graphics into other programs or as input formats to image conversion programs.
DEVICE 2
SVG Scalable Vector Graphics (SVG) is an XML based graphics format.
As XML becomes an increasingly important standard for web development, it is anticipated that SVG will also become an increasingly important graphics format.
SVG is intended primarily for web development.
However, Adobe now provides a free stand alone viewer for SVG format files
In addition, many graphics editing programs (e.g., Photoshop, Corel Draw) support, or are adding support, for the importing of SVG format graphics.
SVG is still not supported in some of the major web browsers (as of 8/2002), although this will probably change in the next year or so.
Dataplot does not currently support dot matrix printers or deskjet/inkjet style printers.
For these type of printers, you may want to investigate the Ghostview/Ghostscript programs.
These ares freely available program that can display Postscript files and print them on various common output devices.
Ghostscript is the engine that contains the Postscript translator and Ghostview is the wrapper program that you actually run to display and print the Postscript files.
The Dataplot ftp site contains a Windows version of Ghostview and Ghostscript.
It is common for Ghostivew/Ghostscript to be installed on Unix platforms.
The current versions of the Unix and Windows versions of Ghostscript/Ghostview can be downloaded from the Web.
DEVICE 3 Output DEVICE 3 Used to Store Most Recent Plot Dataplot uses DEVIVCE 3 to save the most recently generated plot in the file "dppl2f.dat" in the current directory.
Dataplot opens/closes the device in the background when needed.
By default, Postscript output is generated.
The PP command can be used to plot the DEVICE 3 output from within a Dataplot session.
Non-Postscript Output If you do not want Postscript output, then enter the commands DEVICE 3 CLOSE DEVICE 3 
to define the desired output format.
For example, DEVICE 3 CLOSE DEVICE 3 HPGL LASER
can be used if you have a LaserJet printer that supports HP-GL emulation but not Postscript.
Printer Setup The PP command sends the "dppl2f.dat" file to the default printer.
On Unix platforms, the PP command sends an "lpr dppl2f.dat" command to print the file.
To define the default printer, enter the following c-shell command before initiating Dataplot: setenv PRINTER 
There is a comparable command for those who use the Bourne shell.
Under Windows, the default is for the PP command to send the plot to the local printer (i.e., PRN:) in Postscript format.
This means that there are two issues to consider: 1.
If you want to send the graph to a network printer, use the SET PRINTER command to define the name of the printer: SET PRINTER 
I recommend testing this on a small ASCII test file independent of Dataplot (i.e., in a DOS prompt window) before trying to use the PP command.
That is: COPY 
If this does not work, then do not use the PP command within Dataplot.
As the network printer-id can be rather cumbersome and hard to remember, I recommend putting the SET PRINTER command in the Dataplot start-up file.
2.
Dataplot supports a limited number of printer types for Windows.
In addition to Postscript, it supports HP-GL emulation for HP Laser Jet (Model III and higher) and Laser Jet compatible printers.
To utilize this format, enter the commands: DEVICE 3 CLOSE DEVICE 3 HPGL LASER Again, I recommend putting these commands in your Dataplot start-up file.
For other types of printers, you will have to go through Ghostview.
One trick is to open Ghostview concurrently with Dataplot.
When you want to print the current graph, enter a DEVICE 3 CLOSE command and read the current "DPPL2F.DAT" file into Ghostview and print it from there.
You can also use a Windows screen dump, but be aware that you will be getting a "screen mode" level of resolution (also, I recommend using a white background if you plan on using screen dumps to prevent excessive toner usage).
The "File/Print" menu on the command line version is simply a screen dump (these menus are the default compiler menus and they are not modified by Dataplot).
Note that the "Print" button in the graphics window of the Dataplot GUI is actually implementing a Dataplot PP command.
Both of the issues above (i.e., accessing network printers, non-Postscript printers) still apply in this case.
The issue of printing under Windows will be given a further look in the future.
Basically, properly implementing printers in Dataplot requires going to a full blown Windows application (as a technical note, the command line version is built as a "QuickWin" application, the GUI utilizes a "console" application).
This involves basic design issues beyond just printing, so this type of change will not happen quickly.
There are other alternatives that we may consider as well.
For now, those with printers that do not support either Postscript or HPGL emulation should consider Ghostview to be the Dataplot printer.
If you want to turn off the DEVICE 3 output (e.g., you are generating some complex graphs and want to minimize the drawing time), do the following DEVICE 3 CLOSE DEVICE 3 NULL
Closing Devices Selectively Saving Plots Sometimes when you are generating lots of plots interactively, you may want to save a selective subset of these only.
You can do this via DEVICE 2 POSTSCRIPT 
Dataplot makes a distinction between turning a device on and off and opening and closing the device.
When you enter DEVICE 2 OFF, subsequent plots will not be written to DPPL1F.DAT.
However, the file is not closed.
To resume writting the plots to this file, enter DEVICE 2 ON.
When you enter DEVICE 2 CLOSE, this also closes the file.
To reactivate the device, you enter DEVICE 2 POSTSCRIPT (or whatever device is appropriate).
Note that reactivating the device will overwrite the contents of the DPPL1F.DAT file.
Turning the device on and off is the proper technique if you are selectively saving plots.
Closing (and re-opening) the device is the proper technique if you want to perform some action on the file.
This action may be to print DPPL1F.DAT or the copy the file to another name.
In any event, the desired action is usually performed with the SYSTEM command.
Printing the Graphics File Printing Graphics Under Unix Printing the graphics files dppl1f.dat or dppl2f.dat is performed in the standard way for your operating system.
For example, on Unix you would enter the Unix command lpr -P
If you are not sure how to print files on your operating system, check with your local system administrator.
Under Unix, Dataplot can generate either Postscript (DEVICE 2 POSTSCRIPT) or HPGL (DEVICE 2 HPGL LASER).
If you have a non-supported printer (e.g., a DeskJet or InkJet type printer), then investigate Ghostview/Ghostscript.
First, check the Ghostview/Ghostscript documentation to see if your printer is supported.
If so, then check to see if Ghostview/Ghostscript is already installed on your system.
If not, you need to download and install it (hopefully, your local system administrator will be willing to help).
Note that in Unix, there is not a common "graphics device" interface for printers.
The protocol for a given printers has to be explicitly supported.
For this reason, Postscript is the preferred protocol for printers in the Unix world and the list of supported printers in Ghostview may be smaller in the Unix implementation than the Windows implementation.
This is more likely to be an issue for PC based Unix/Linux platforms than for workstation based platforms.
Printing Graphics Under Windows We will distinguish three classes of printers on Windows.
1.
Postscript printers 2.
Laser printers that support HP-GL emulation 3.
Other printers (e.g., Desk Jet, Ink Jet, and dot matrix printers)
As discussed above, Dataplot maintains three graphics devices.
These can all be used simultaneously and independently and are controlled by the DEVICE 1, DEVICE 2, and DEVICE 3 commands.
We will frame the following discussion in terms of DEVICE 2 since this is the one typically used for generating graphs for the printer (the issues for DEVICE 3 are similar).
Window Printing - Postscript If you have a Postscript printer, then enter the command DEVICE 2 POSTSCRIPT
All subsequent plots will be written to the file dppl1f.dat in the default directory.
If you initiate Dataplot from a shortcut, then the default directory can be set from the "Properties" menu (the "Start-In" directory).
You can print this file directly by entering the following command from a DOS Prompt window: COPY DPPL1F.DAT PRN:
You may need to CD to the default directory or put the full path name in for DPPL1F.DAT.
Windows is not case sensitive for file names.
If your printer is a network rather than a local printer, then replace PRN: with the network name for the printer (this will be system dependent).
If you want to print the graphs from within the Dataplot session, then enter the commands DEVICE 2 CLOSE SYSTEM COPY DPPL1F.DAT PRN: DEVICE 2 POSTSCRIPT
For network printers, substitute the network printer id for PRN: (see your local system administrator for the id).
If you prefer to avoid entering DOS commands, you can alternatively read the DPPl1F.DAT file into Ghostview (Ghostview is a freely downloadable program for displaying and printing Postscript files).
Ghostview can print the Postscript file on either Postscript or non-Postscript devices.
Windows Printing - HPGL Emulation If you have a printer that supports HP-GL emulation (i.e., most HP Laser Jet and compatible printers), then enter the command DEVICE 2 HPGL LASER
Note that the "LASER" option is required for laser printers.
This adds some special codes that work around some quirks in the HPGL emulation in the laser printers.
All subsequent plots will be written to the file dppl1f.dat in the default directory.
If you initiate Dataplot from a shortcut, then the default directory can be set from the "Properties" menu (the "Start-In" directory).
You can print this file directly by entering the following command from a DOS Prompt window: COPY DPPL1F.DAT PRN:
You may need to CD to the default directory or put the full path name in for DPPL1F.DAT.
Windows is not case sensitive for file names.
If your printer is a network rather than a local printer, then replace PRN: with the network name for the printer (this will be system dependent).
If you want to print the graphs from within the Dataplot session, then enter the commands DEVICE 2 CLOSES SYSTEM COPY DPPL1F.DAT PRN: DEVICE 2 POSTSCRIPT
For network printers, substitute the network printer id for PRN: (see your local system administrator for the id).
Alternatively, you can read the file into NotePad (or WordPad) and use the Print utilities from within these programs.
Window Printing - Unsupported Printers If you have a printer that supports neither Postscript or HP-GL, then you should download the Ghostscript/Ghostview program.
Ghostscript is a freely downloadable Postscript translator and Ghostview is a Windows viewer built on top of Ghostscript that allows you to view Postscript files on the screen and print them on most common PC printers.
I keep a Windows copy of the Ghostview/Ghostscript installation files on the Dataplot ftp site (to ensure that you obtain the most recent versions, go to the Ghostview web site).
Once you install Ghostscript/Ghostview, then in Dataplot enter the command DEVICE 2 POSTSCRIPT
You can then import the dppl1f.dat file into Ghostview.
Ghostview allows you to print Posctscript files on most common PC printers.
Dataplot does not support a standard Windows print menu for graphics output.
Instead, Dataplot uses Ghostview as its generic Windows printer.
Note that Ghostview provides the command GSPRINT.EXE which can be used to print Dataplot graphs from within a Dataplot session.
For example, DEVICE 2 POSTSCRIPT ....
Generate on or more plots ...
DEVICE 2 CLOSE SYSTEM C:\GHOSTGUM\GHOSTVIEW\GSPRINT.EXE DPPL1F.DAT DEVICE 2 POSTSCRIPT
This will print the graphs in DPPL1F.DAT on the default Windows printer.
NOTE (11/2002): The PP command can be used to print the most recently generated graph.
If you enter the command SET GHOSTSCRIPT PRINTER ON
Dataplot will use the GSPRINT command to generate the plot.
If your default printer is not Postscript, we recommend adding this command to your "dplogf.tex" file.
GSPRINT should support most Windows printers.
Incorporating Dataplot Graphics Into External Programs Import Procedure in the External Program It is common to import Dataplot graphics into external programs for the purposes of writing reports and giving presentations.
To import graphics into Word/Excel/Power Point, there are several points to consider.
1.
What is the procedure in Word/Excel/Power Point for importing graphics? Word, Excel, and Power Point all utilize the same procedure for importing graphics.
Mark your cursor where you want the graph to be inserted and then do the following: 1.
select the "Insert" menu 2.
select the "Picture" menu 3.
select the "From File" option 4.
enter the name of the file containing the graph 2.
What graphic formats do Word/Excel/Power Point support? The supported graphics formats include: + Windows metafile and Windows bitmap + JPEG + PNG (portable network graphics) + GIF + MacIntosh PICT + PC Paintbrush + CGM (computer graphics metafiles) + FPX + CorelDraw + Kodak Photo CD + Word Perfect Graphics + TIFF + Encapsulated Postscript This list is subject to change as new versions of Microsoft Office are released (and some formats may not be installed by default).
The most common formats are Windows bitmap/metafile, JPEG, PNG, GIF, and encapsulated Postscript.
Other Office Software programs will have similar procedures.
However, the list of supported import formats may be different.
For these other software programs, you will need to check the program documentation to determine the procedure for importing external graphics and the list of supported import formats.
Dataplot Issues There are several issues for Dataplot graphics.
1.
The first issue is that each graph to be imported should reside in a separate file.
There are several ways to approach this.
+ You can generate each graph in a separate Dataplot session.
Although easy, this can be more time consuming than needed.
+ You can redefine the IPL1NA variable.
For example, SET IPL1NA PLOT1.EPS DEVICE 2 POSTSCRIPT ENCAPSUALTED ORIENTATION LANDSCAPE WORDPERFECT ... generate plot ....
DEVICE 2 CLOSE SET IPL1NA PLOT2.EPS DEVICE 2 POSTSCRIPT ENCAPSUALTED ORIENTATION LANDSCAPE WORDPERFECT ... generate plot ....
DEVICE 2 CLOSE Repeat the above sequence as often as needed.
+ Alternatively, you can use the SYSTEM command: DEVICE 2 POSTSCRIPT ENCAPSUALTED ORIENTATION LANDSCAPE WORDPERFECT ... generate plot ....
DEVICE 2 CLOSE SYSTEM COPY DPPL1F.DAT PLOT1.EPS DEVICE 2 POSTSCRIPT ENCAPSUALTED ORIENTATION LANDSCAPE WORDPERFECT ... generate plot ....
DEVICE 2 CLOSE SYSTEM COPY DPPL1F.DAT PLOT2.EPS Repeat the above sequence as often as needed.
2.
The second issue is in deciding what is the best graphics format to use with Dataplot.
My preference is to use encapsulated Postscript whenever possible.
The primary advantage is quality (you maintain the high resolution of the Postscript graph when printing and you can utilize the typeset quality Postscript fonts).
Bitmap graphics are typically generated at screen resolution.
The quality issue is typically more important for written reports than for Power Point style presentations (since the presentation is shown on a computer monitor anyway, screen resolution for the Dataplot graphics should be adequate).
Although encapsulated Postscript does provide higher quality, there are some special considerations when importing encapsulated Postscript files.
These considerations are discussed further below.
In addition to Postscript, Dataplot can generate PNG and JPEG bitmap graphics on most Unix platforms (this is being ported to Windows, but is not available as of 9/2002).
Dataplot can also generate HPGL format graphics (this is the HP penplotter protocol).
PNG and JPEG are supported by most Windows Office programs.
HPGL is supported in older versions of Microsoft Office (support seems to have been dropped at the Office 2000 release) and may be supported in other Windows Office software.
Also, you may be able to save screen dumps in an appropriate format on some systems for some external programs.
Another alternative is to generate either Postscript or encapsulated Postscript and then use one of the many image conversion programs (some are free, some are commercial) to generate a bitmap format of your choice.
Note that Postscript is a language rather just a bit-map format, so many image conversion programs do not support Postscript as input.
That is, converting between bit-map formats is typically a straightforward process.
Converting Postscript is not.
Be sure to check carefully as many conversion programs support Postscript as an output format, but not as an import format.
Image conversion programs can also be used to convert Dataplot PNG and JPEG files to other bit-map formats.
Note that PNG and JPEG are likely to be supported by a wide range of image conversion programs.
NOTE (1/2003): Dataplot now supports an alternative method for generating bitmapped graphics.
Specifically, it invokes Ghostscript automatically to convert Postscript output to one of: * JPEG * PDF (Portable Document Format) * TIFF * PBM (Portable Bitmap, supports black and white only) * PGM (Portable Greymap, supports grey scale) * PPM (Portable Pixmap, supports color) * PNM (Portable Anymap, supports PBM, PGM, and PPM)
This capability is supported on Unix and Windows platforms.
Between Postscript and the above formats, it should be possible to generate Dataplot graphis in a format acceptable to most external programs (the JPEG and PBM formats are accepted by most image conversion programs).
Enter the commmand HELP POSTSCRIPT CONVERT for details.
Special Issues for Encapsulated Postscript Files Note that there are a number of special considerations when importing encapsulated postscript files: * There is a distinction between encapsulated postscript and regular postscript.
Encapsulated postscript is a special form of Postscript that is intended specifically for importing postscript graphics into another program.
When you are creating the postscript graphic in your application software, you need to be aware whether or not you are creating regular or encapsulated Postscript.
If you know that the graphic is intended for importing into another program such as Word or Power Point, then I recommend that you create it as an encapsulated postscript file.
Note that an encapsulated postscript file may print as a blank page on your printer.
This is an intentional design feature, not a bug.
* Programs such as Word and Power Point handle encapsulated Postscript files differently than they do other graphics formats.
Typically, imported graphics are first converted to a common internal format.
However, encapsulated Postscript files are typically not converted.
Instead, they are simply "passed on" when the file is displayed or printed.
The reason for this is that Postscript is actually a full blown computer language, not just a device protocol.
Unless the importing program has licensed a Postscript interpreter (not common for non-Adobe software), it will not be able to translate Postscript.
Note that Adobe products will typically translate imported Postscript graphs correctly (this is reasonable since Postscript was developed by Adobe).
* The above bullet has an important implication.
If the imported graphic is displayed on a non-Postscript device, it will typically display as an empty box (some programs will print a sentence to the effect that "a Postscript graph goes here").
This inability to display encapsulated Postscript files can be addressed in several ways.
+ For printed output, simply be sure to print on a Postscript printer.
Note that the application program (i.e., Word, Power Point) must know that you are printing on a Postscript printer.
Many printers support both a native mode format (e.g., PCL) and Postscript.
Word and Power Point (and most Windows applications) by default assume the native word format.
The solution is to install both the native mode version and the Postscript version of the printer.
Then be sure to select the Postscript version of the printer when you print a file containing imported encapsulated Postscript files.
+ To address this issue of non-Postscript devices, encapsulated Postscript allows for an optional "bit-map preview".
This is a bit map of the encapsulated Postscript graph that will be used to display on non-Postscript devices.
The bit-map preview is ignored on Postscript devices.
Even if your encapsulated Postscript contains a bit-map preview, I recommend printing to a Postscript printer when one is available (i.e., it is preferrable to print the original Postscript rather than the bit-map preview).
+ Bit-map previews are optional and Dataplot does not support it.
However, you can use the Windows version of Ghostview to create the bit-map preview.
That is, import the Dataplot encapsulated Postscript file into Ghostview, add a bit-map preview, save the file, and then import this saved file (which contains the bit-map preview) into your Word (or Power Point, etc.) program.
Note that you can only add a bit-map preview to an encapsulated Postscript file, not a regular Postscript file.
+ From within Dataplot, use the following commands to create the encapsulated Postscript file: DEVICE 2 POSTSCRIPT ENCAPSULATED ORIENTATION LANDSCAPE WORDPERFECT The order is important.
That is, initialize the device first, then set the orientation.
This orientation sets a landscape orientation on a portrait page.
If you use this orientation, you should not have to rotate or scale the graph once you import it (you will have to rotate and scale if you use the default landscape orientation).
Given the above, it is reasonable to ask "why bother with importing Postscript?".
The reason is image quality.
Most of the other import formats are essentially bit maps that are generally created at "screen" resolution (typically 72 dots per inch).
Postscript graphics are generally created at much higher resolution (300, 600, or 1200 dots per inch is typical).
This can result in much sharper looking graphs in printed documents.
Date created: 6/5/2001 Last updated: 9/16/2002 Please email comments on this WWW page to sedwww@cam.nist.gov.
[ Dataplot ]
